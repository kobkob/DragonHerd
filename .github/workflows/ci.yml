name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.1, 8.2, 8.3]
    
    name: PHP ${{ matrix.php-version }} Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, json
        coverage: xdebug
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --dev
    
    - name: Run PHP CodeSniffer
      run: composer run phpcs
    
    - name: Run PHPStan
      run: composer run phpstan
    
    - name: Run PHPUnit Tests
      run: composer run test:ci
    
    - name: Generate coverage report (optional)
      run: |
        echo "Attempting to generate coverage report..."
        composer run test:coverage || echo "Coverage generation failed, continuing..."
      continue-on-error: true
    
    - name: Upload coverage to Codecov (optional)
      if: always()
      run: |
        if [ -f "./coverage/clover.xml" ]; then
          echo "Coverage file found, uploading to Codecov..."
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -f ./coverage/clover.xml || echo "Codecov upload failed, continuing..."
        else
          echo "No coverage file found, skipping Codecov upload"
        fi
      continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
    
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader
    
    - name: Create plugin package
      run: |
        mkdir -p build
        rsync -av --exclude-from='.distignore' . build/dragonherd/
        cd build
        zip -r dragonherd-${{ github.sha }}.zip dragonherd/
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: dragonherd-plugin
        path: build/dragonherd-*.zip

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run security audit
      run: composer audit

  deploy:
    needs: [test, build, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: dragonherd-plugin
        path: ./dist
    
    - name: Deploy to WordPress.org (placeholder)
      run: |
        echo "Deployment step - configure with WordPress.org SVN or other deployment method"
        echo "Files ready in ./dist/"
        ls -la ./dist/
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this release:
          - Updated plugin functionality
          - Bug fixes and improvements
        draft: false
        prerelease: false
